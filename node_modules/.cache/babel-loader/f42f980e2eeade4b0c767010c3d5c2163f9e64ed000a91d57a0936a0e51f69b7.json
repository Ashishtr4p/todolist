{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ashish Pc\\\\Desktop\\\\todo\\\\src\\\\modals\\\\EditTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditTaskPopup = _ref => {\n  _s();\n  let {\n    modal,\n    toggle,\n    updateTask,\n    taskObj\n  } = _ref;\n  const [taskName, setTaskName] = useState('');\n  const [description, setDescription] = useState('');\n  var [time] = useState(new Date());\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === \"taskName\") {\n      setTaskName(value);\n    } else {\n      setDescription(value);\n    }\n  };\n  useEffect(() => {\n    setTaskName(taskObj.Name);\n    setDescription(taskObj.Description);\n  }, [taskObj.Description, taskObj.Name]);\n  const handleUpdate = e => {\n    e.preventDefault();\n    let tempObj = {};\n    tempObj['Name'] = taskName;\n    tempObj['Description'] = description;\n    taskObj[\"time\"] = time.toLocaleTimeString();\n    updateTask(tempObj);\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      toggle: toggle,\n      children: \"Update Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Task Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: taskName,\n          onChange: handleChange,\n          name: \"taskName\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"5\",\n          className: \"form-control\",\n          value: description,\n          onChange: handleChange,\n          name: \"description\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: handleUpdate,\n        style: {\n          borderRadius: '10px',\n          margin: '5px',\n          padding: '8px',\n          backgroundColor: 'blue'\n        },\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        onClick: toggle,\n        style: {\n          borderRadius: '10px',\n          margin: '5px',\n          padding: '8px',\n          backgroundColor: 'blue'\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(EditTaskPopup, \"1slEuYK2DxHjhk/8JOupRHGLRSM=\");\n_c = EditTaskPopup;\nexport default EditTaskPopup;\nvar _c;\n$RefreshReg$(_c, \"EditTaskPopup\");","map":{"version":3,"names":["React","useState","useEffect","Button","Modal","ModalHeader","ModalBody","ModalFooter","EditTaskPopup","modal","toggle","updateTask","taskObj","taskName","setTaskName","description","setDescription","time","Date","handleChange","e","name","value","target","Name","Description","handleUpdate","preventDefault","tempObj","toLocaleTimeString","borderRadius","margin","padding","backgroundColor"],"sources":["C:/Users/Ashish Pc/Desktop/todo/src/modals/EditTask.js"],"sourcesContent":["import React, { useState , useEffect} from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst EditTaskPopup = ({modal, toggle, updateTask, taskObj}) => {\n    const [taskName, setTaskName] = useState('');\n    const [description, setDescription] = useState('');\n    var [time] = useState(new Date());\n    const handleChange = (e) => {\n        \n        const {name, value} = e.target\n\n        if(name === \"taskName\"){\n            setTaskName(value)\n        }else{\n            setDescription(value)\n        }\n\n\n    }\n    useEffect(() => {\n        setTaskName(taskObj.Name)\n        setDescription(taskObj.Description)\n    },[taskObj.Description, taskObj.Name])\n    \n\n    const handleUpdate = (e) => {\n        e.preventDefault();\n        let tempObj = {}\n        tempObj['Name'] = taskName\n        tempObj['Description'] = description\n        taskObj[\"time\"]= time.toLocaleTimeString()\n        updateTask(tempObj)\n    }\n\n    return (\n        <Modal isOpen={modal} toggle={toggle}>\n            <ModalHeader toggle={toggle}>Update Task</ModalHeader>\n            <ModalBody>\n            \n                    <div className = \"form-group\">\n                        <label>Task Name</label>\n                        <input type=\"text\" className = \"form-control\" value = {taskName} onChange = {handleChange} name = \"taskName\" required/>\n                    </div>\n                    <div className = \"form-group\">\n                        <label>Description</label>\n                        <textarea rows = \"5\" className = \"form-control\" value = {description} onChange = {handleChange} name = \"description\" required></textarea>\n                    </div>\n                \n            </ModalBody>\n            <ModalFooter>\n            <Button color=\"primary\" onClick={handleUpdate} style={{borderRadius:'10px', margin:'5px',padding:'8px',backgroundColor:'blue'}}>Update</Button>{' '}\n            <Button color=\"secondary\" onClick={toggle} style={{borderRadius:'10px', margin:'5px',padding:'8px',backgroundColor:'blue'}}>Cancel</Button>\n            </ModalFooter>\n      </Modal>\n    );\n};\n\nexport default EditTaskPopup;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}